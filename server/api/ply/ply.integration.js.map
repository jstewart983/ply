{"version":3,"sources":["../../../../server/api/ply/ply.integration.js"],"names":[],"mappings":"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","file":"ply.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nvar request = require('supertest');\n\nvar newPly;\n\ndescribe('Ply API:', function() {\n\n  describe('GET /api/plys', function() {\n    var plys;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/plys')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          plys = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      plys.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/plys', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/plys')\n        .send({\n          name: 'New Ply',\n          info: 'This is the brand new ply!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          newPly = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created ply', function() {\n      newPly.name.should.equal('New Ply');\n      newPly.info.should.equal('This is the brand new ply!!!');\n    });\n\n  });\n\n  describe('GET /api/plys/:id', function() {\n    var ply;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/plys/' + newPly._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          ply = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      ply = {};\n    });\n\n    it('should respond with the requested ply', function() {\n      ply.name.should.equal('New Ply');\n      ply.info.should.equal('This is the brand new ply!!!');\n    });\n\n  });\n\n  describe('PUT /api/plys/:id', function() {\n    var updatedPly\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/plys/' + newPly._id)\n        .send({\n          name: 'Updated Ply',\n          info: 'This is the updated ply!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedPly = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedPly = {};\n    });\n\n    it('should respond with the updated ply', function() {\n      updatedPly.name.should.equal('Updated Ply');\n      updatedPly.info.should.equal('This is the updated ply!!!');\n    });\n\n  });\n\n  describe('DELETE /api/plys/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/plys/' + newPly._id)\n        .expect(204)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when ply does not exist', function(done) {\n      request(app)\n        .delete('/api/plys/' + newPly._id)\n        .expect(404)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}